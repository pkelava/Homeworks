CHIP Mult{
	IN a[16], b[16];
	OUT out[16];
	PARTS:
	And16(a= a,b[0]= b[0],b[1]= b[0],b[2]= b[0],b[3]= b[0],b[4]= b[0],b[5]= b[0],b[6]= b[0],b[7]= b[0],b[8]= b[0],b[9]= b[0],b[10]= b[0],b[11]= b[0],b[12]= b[0],b[13]= b[0],b[14]= b[0],b[15]= b[0], out= o1);
	And16(a= a,b[0]= b[1],b[1]= b[1],b[2]= b[1],b[3]= b[1],b[4]= b[1],b[5]= b[1],b[6]= b[1],b[7]= b[1],b[8]= b[1],b[9]= b[1],b[10]= b[1],b[11]= b[1],b[12]= b[1],b[13]= b[1],b[14]= b[1],b[15]= b[1], out= o2);
	And16(a= a,b[0]= b[2],b[1]= b[2],b[2]= b[2],b[3]= b[2],b[4]= b[2],b[5]= b[2],b[6]= b[2],b[7]=b[2],b[8]= b[2],b[9]= b[2],b[10]= b[2],b[11]= b[2],b[12]= b[2],b[13]= b[2],b[14]= b[2],b[15]= b[2], out= o3);
	And16(a= a,b[0]= b[3],b[1]= b[3],b[2]= b[3],b[3]= b[3],b[4]= b[3],b[5]= b[3],b[6]= b[3],b[7]= b[3],b[8]= b[3],b[9]= b[3],b[10]= b[3],b[11]= b[3],b[12]=b[3],b[13]= b[3],b[14]= b[3],b[15]=b[3], out= o4);
	And16(a= a,b[0]= b[4],b[1]= b[4],b[2]= b[4],b[3]= b[4],b[4]=b[4],b[5]= b[4],b[6]= b[4],b[7]= b[4],b[8]= b[4],b[9]= b[4],b[10]= b[4],b[11]= b[4],b[12]= b[4],b[13]= b[4],b[14]= b[4],b[15]= b[4], out= o5);
	And16(a= a,b[0]= b[5],b[1]= b[5],b[2]= b[5],b[3]= b[5],b[4]= b[5],b[5]= b[5],b[6]= b[5],b[7]= b[5],b[8]= b[5],b[9]= b[5],b[10]= b[5],b[11]= b[5],b[12]=b[5],b[13]= b[5],b[14]= b[5],b[15]= b[5], out= o6);
	And16(a= a,b[0]= b[6],b[1]= b[6],b[2]= b[6],b[3]= b[6],b[4]= b[6],b[5]= b[6],b[6]= b[6],b[7]= b[6],b[8]= b[6],b[9]= b[6],b[10]= b[6],b[11]= b[6],b[12]= b[6],b[13]= b[6],b[14]= b[6],b[15]= b[6], out= o7);
	And16(a= a,b[0]= b[7],b[1]= b[7],b[2]=b[7],b[3]= b[7],b[4]= b[7],b[5]= b[7],b[6]= b[7],b[7]= b[7],b[8]= b[7],b[9]= b[7],b[10]= b[7],b[11]= b[7],b[12]= b[7],b[13]= b[7],b[14]= b[7],b[15]= b[7], out= o8);
	And16(a= a,b[0]= b[8],b[1]= b[8],b[2]= b[8],b[3]= b[8],b[4]= b[8],b[5]= b[8],b[6]= b[8],b[7]=b[8],b[8]= b[8],b[9]= b[8],b[10]= b[8],b[11]= b[8],b[12]=b[8],b[13]= b[8],b[14]= b[8],b[15]= b[8], out= o9);
	And16(a= a,b[0]= b[9],b[1]= b[9],b[2]= b[9],b[3]= b[9],b[4]= b[9],b[5]= b[9],b[6]= b[9],b[7]= b[9],b[8]= b[9],b[9]=b[9],b[10]= b[9],b[11]= b[9],b[12]= b[9],b[13]= b[9],b[14]=b[9],b[15]= b[9], out= o10);
	And16(a= a,b[0]= b[10],b[1]= b[10],b[2]= b[10],b[3]= b[10],b[4]= b[10],b[5]= b[10],b[6]= b[10],b[7]= b[10],b[8]= b[10],b[9]= b[10],b[10]= b[10],b[11]= b[10],b[12]= b[10],b[13]= b[10],b[14]= b[10],b[15]= b[10], out= o11);
	And16(a= a,b[0]= b[11],b[1]= b[11],b[2]= b[11],b[3]=b[11],b[4]= b[11],b[5]= b[11],b[6]= b[11],b[7]= b[11],b[8]=b[11],b[9]= b[11],b[10]= b[11],b[11]= b[11],b[12]= b[11],b[13]= b[11],b[14]= b[11],b[15]=b[11], out= o12);
	And16(a= a,b[0]= b[12],b[1]= b[12],b[2]= b[12],b[3]= b[12],b[4]= b[12],b[5]= b[12],b[6]= b[12],b[7]= b[12],b[8]= b[12],b[9]= b[12],b[10]= b[12],b[11]= b[12],b[12]= b[12],b[13]= b[12],b[14]= b[12],b[15]=b[12], out= o13);
	And16(a= a,b[0]= b[13],b[1]= b[13],b[2]= b[13],b[3]=b[13],b[4]=b[13],b[5]= b[13],b[6]=b[13],b[7]= b[13],b[8]= b[13],b[9]= b[13],b[10]= b[13],b[11]= b[13],b[12]= b[13],b[13]= b[13],b[14]= b[13],b[15]= b[13], out= o14);
	And16(a= a,b[0]= b[14],b[1]= b[14],b[2]= b[14],b[3]=b[14],b[4]= b[14],b[5]= b[14],b[6]=b[14],b[7]= b[14],b[8]= b[14],b[9]= b[14],b[10]=b[14],b[11]= b[14],b[12]= b[14],b[13]= b[14],b[14]=b[14],b[15]= b[14], out= o15);
	And16(a= a,b[0]= b[15],b[1]= b[15],b[2]= b[15],b[3]= b[15],b[4]= b[15],b[5]= b[15],b[6]= b[15],b[7]=b[15],b[8]= b[15],b[9]= b[15],b[10]= b[15],b[11]= b[15],b[12]= b[15],b[13]= b[15],b[14]= b[15],b[15]= b[15], out= o16);
	
	//dodao sam BitShiftL iz zadatka2 u built in funkcije
	
	BitShiftL(in= o16, out= z1);
	Add16(a= z1,b= o15, out= g1);
	BitShiftL(in= g1, out= z2);
	Add16(a= z2,b= o14, out= g2);
	BitShiftL(in= g2, out= z3);
	Add16(a= z3,b= o13, out= g3);
	BitShiftL(in= g3, out= z4);
	Add16(a= z4,b= o12, out= g4);
	BitShiftL(in= g4, out= z5);
	Add16(a= z5,b= o11, out= g5);
	BitShiftL(in= g5, out= z6);
	Add16(a= z6,b= o10, out= g6);
	BitShiftL(in= g6, out= z7);
	Add16(a= z7,b= o9, out= g7);
	BitShiftL(in= g7, out= z8);
	Add16(a= z8,b= o8, out= g8);
	BitShiftL(in= g8, out= z9);
	Add16(a= z9,b= o7, out= g9);
	BitShiftL(in= g9, out= z10);
	Add16(a= z10,b= o6, out= g10);
	BitShiftL(in= g10, out= z11);
	Add16(a= z11,b= o5, out= g11);
	BitShiftL(in= g11, out= z12);
	Add16(a= z12,b= o4, out= g12);
	BitShiftL(in= g12, out= z13);
	Add16(a= z13,b= o3, out= g13);
	BitShiftL(in= g13, out= z14);
	Add16(a= z14,b= o2, out= g14);
	BitShiftL(in= g14, out= z15);
	Add16(a= z15,b= o1, out= out);
}